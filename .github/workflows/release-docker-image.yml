name: Build and Push Docker Image

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main

env:
  REGISTRY: europe-west4-docker.pkg.dev/impl-383520/docker
  IMAGE_NAME: ${{ github.event.repository.name }}

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest

    name: Build and Push Docker Image

    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@f7b4ed12385588c3f9bc252f0a2b520d83b52d48
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Set up gcloud Cloud SDK environment
        uses: google-github-actions/setup-gcloud@v2.1.0
        with:
          project_id: impl-383520

      - name: 'Configure docker'
        run: gcloud auth configure-docker europe-west4-docker.pkg.dev --quiet

      - name: Build and push docker image
        uses: docker/build-push-action@ef6cba335306ace1da064b44f9f739dec9be9fa0
        with:
          context: .
          platforms: linux/arm64,linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_SHA=${{ github.sha }}
            RELEASE=${{ github.ref }}

      - name: Kubernetes context
        uses: Azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
  
      - name: Rollout Restart
        run: kubectl -n nextjstryout2 rollout restart statefulset nextjstryout2 
